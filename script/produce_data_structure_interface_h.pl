#!/usr/bin/perl
use strict;
use warnings;
use feature qw(say);
use lib './script';
use scan_source_file;

## <inc_dir> <output> <declaration list> ##

my $inc = shift @ARGV;
my $output = shift @ARGV;
my $basename = $1 if $output =~ /(\w+\.h)/;
my $type = "$inc/types.h";
my $data_structure = "$inc/data_structure_types.h";

my @typedef;
my @structure;
my @definition;
my @declaration;

say "    Generate $basename";

#######################################
## Create data_structure_interface.h ##
#######################################
open INTERFACE, '>', $output or die "Failed to locate $output, $!\n";

printf INTERFACE "#ifndef HAVE_DEFINED_DATA_STRUCTURE_INTERFACE_H\n";
printf INTERFACE "#define HAVE_DEFINED_DATA_STRUCTURE_INTERFACE_H\n\n";
printf INTERFACE "// Automaticaly generated by $0.\n\n";

##################
## Scan typedef ##
##################
@typedef = scan_header_file_typedefs($type);

foreach (@typedef) {
    printf INTERFACE "$_";
}
printf INTERFACE "\n";

#############################
# enum/structure in types.h #
#############################
@structure = scan_header_file_structure($type);

foreach (@structure) {
    printf INTERFACE "$_";
}
printf INTERFACE "\n";

#####################
## Scan definition ##
#####################
@definition = scan_header_file_definition($data_structure);

foreach (@definition) {
    printf INTERFACE "$_";
}
printf INTERFACE "\n";

####################
## Scan structure ##
####################
@structure = scan_header_file_structure($data_structure);

foreach (@structure) {
    printf INTERFACE "$_";
}
printf INTERFACE "\n";

###############################
## Scan function declaration ##
###############################
@declaration = @ARGV;

foreach (@declaration) {
    my @external = scan_header_file_externals($_);
    foreach (@external) {
        printf INTERFACE "extern $_";
    }
    printf INTERFACE "\n";
}

printf INTERFACE "\n#endif\n\n";

close INTERFACE;

