#ifndef HAVE_DEFINED_unit_test_H
#define HAVE_DEFINED_unit_test_H

// Automaticaly generated by script/produce_module_declaration_h.pl.

static inline bool utest_maximal_heap_ordered_p(struct maximal_heap *heap);
static inline bool utest_minimal_heap_ordered_p(struct minimal_heap *heap);
static inline void unit_test_begin_print(char *name);
static inline void unit_test_execution_category(const struct test_layer_table *category, struct test_case_filter *filter);
static inline void unit_test_execution_implement(const struct test_layer_table *implement, struct test_case_filter *filter);
static inline void unit_test_execution_interface(const struct test_layer_table *interface, struct test_case_filter *filter);
static inline void unit_test_execution_start(struct test_extra_info *entry, char *content);
static inline void unit_test_result_print(char *name, bool passed);
static inline void utest_binary_indexed_tree_add(void);
static inline void utest_binary_indexed_tree_create(void);
static inline void utest_binary_indexed_tree_destroy(void);
static inline void utest_binary_indexed_tree_range_sum(void);
static inline void utest_binary_indexed_tree_sub(void);
static inline void utest_binary_indexed_tree_sum(void);
static inline void utest_doubly_end_queue_create(void);
static inline void utest_maximal_heap_decrease_nice(void);
static inline void utest_maximal_heap_increase_nice(void);
static inline void utest_min_max_heap_decrease_nice(void);
static inline void utest_min_max_heap_depth(void);
static inline void utest_min_max_heap_increase_nice(void);
static inline void utest_minimal_heap_decrease_nice(void);
static inline void utest_minimal_heap_increase_nice(void);
static inline void utest_trie_tree_create(void);
static inline void utest_trie_tree_destroy(void);
static inline void utest_trie_tree_sequence_insert(void);
static inline void utest_trie_tree_sequence_matched_p(void);
static inline void utest_trie_tree_string_insert(void);
static inline void utest_trie_tree_string_matched_p(void);
static void unit_test_leftist_heap_create(void);
static void unit_test_leftist_heap_destroy(void);
static void unit_test_leftist_heap_get_min(void);
static void unit_test_leftist_heap_insert(void);
static void unit_test_leftist_heap_merge(void);
static void unit_test_leftist_heap_node_create(void);
static void unit_test_leftist_heap_remove_min(void);
static void unit_test_leftist_heap_remove_min_and_destroy(void);
static void unit_test_leftist_heap_struct_field(void);
static void utest_avl_tree_balanced_p(void);
static void utest_doubly_end_queue_cleanup(void);
static void utest_doubly_end_queue_empty_p(void);
static void utest_doubly_end_queue_front_enter(void);
static void utest_doubly_end_queue_front_leave(void);
static void utest_doubly_end_queue_iterate(void);
static void utest_doubly_end_queue_length(void);
static void utest_doubly_end_queue_rear_enter(void);
static void utest_doubly_end_queue_rear_leave(void);
static void utest_skip_linked_list_contains_p(void);
static void utest_skip_linked_list_create_with_key(void);
static void utest_skip_linked_list_find_key(void);
static void utest_skip_linked_list_insert(void);
static void utest_skip_linked_list_merge(void);
static void utest_skip_linked_list_remove(void);
static void utest_splay_tree_contains_p(void);
static void utest_splay_tree_find(void);
static void utest_splay_tree_find_max(void);
static void utest_splay_tree_find_min(void);
static void utest_splay_tree_remove(void);
static void utest_stacked_queue_cleanup(void);
static void utest_stacked_queue_create(void);
static void utest_stacked_queue_iterate(void);
static void utest_stacked_queue_leave(void);
static void utest_stacked_queue_rest(void);

#endif

