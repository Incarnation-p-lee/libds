#ifndef HAVE_DEFINED_lock_H
#define HAVE_DEFINED_lock_H

// Automaticaly generated by script/produce_module_declaration_h.pl.

#if defined DEBUG


#endif

bool mutex_illegal_p(s_mutex_t *mutex);
bool mutex_legal_p(s_mutex_t *mutex);
bool semaphore_available_p(s_semaphore_t *semaphore);
bool semaphore_illegal_p(s_semaphore_t *semaphore);
bool semaphore_legal_p(s_semaphore_t *semaphore);
bool spin_lock_illegal_p(s_spin_lock_t *lock);
bool spin_lock_legal_p(s_spin_lock_t *lock);
bool spin_locked_p(s_spin_lock_t *lock);
bool spin_unlocked_p(s_spin_lock_t *lock);
s_mutex_t * mutex_create(void);
s_semaphore_t * semaphore_create(uint32 val);
s_spin_lock_t * spin_lock_create(void);
static inline bool mutex_illegal_ip(s_mutex_t *mutex);
static inline bool mutex_legal_ip(s_mutex_t *mutex);
static inline bool semaphore_available_ip(s_semaphore_t *semaphore);
static inline bool semaphore_illegal_ip(s_semaphore_t *semaphore);
static inline bool semaphore_legal_ip(s_semaphore_t *semaphore);
static inline bool spin_lock_illegal_ip(s_spin_lock_t *lock);
static inline bool spin_lock_legal_ip(s_spin_lock_t *lock);
static inline bool spin_locked_ip(s_spin_lock_t *lock);
static inline bool spin_unlocked_ip(s_spin_lock_t *lock);
static inline s_array_queue_t * semaphore_sleep_queue(s_semaphore_t *semaphore);
static inline s_semaphore_t * mutex_semaphore(s_mutex_t *mutex);
static inline s_semaphore_t * semaphore_create_i(uint32 val);
static inline s_spin_lock_t * semaphore_lock(s_semaphore_t *semaphore);
static inline sint32 semaphore_val(s_semaphore_t *semaphore);
static inline void mutex_lock_i(s_mutex_t *mutex);
static inline void mutex_unlock_i(s_mutex_t *mutex);
static inline void semaphore_destroy_i(s_semaphore_t *semaphore);
static inline void semaphore_down_i(s_semaphore_t *semaphore);
static inline void semaphore_up_i(s_semaphore_t *semaphore);
static inline void spin_lock_destroy_i(s_spin_lock_t *lock);
static inline void spin_lock_i(s_spin_lock_t *lock);
static inline void spin_lock_initial_i(s_spin_lock_t *lock);
static inline void spin_lock_shared_lock_clear(s_spin_lock_t *lock);
static inline void spin_unlock_i(s_spin_lock_t *lock);
static void semaphore_sigcont_handler(sint32 signum);
void mutex_destroy(s_mutex_t **mutex);
void mutex_lock(s_mutex_t *mutex);
void mutex_unlock(s_mutex_t *mutex);
void semaphore_destroy(s_semaphore_t **semaphore);
void semaphore_down(s_semaphore_t *semaphore);
void semaphore_up(s_semaphore_t *semaphore);
void spin_lock(s_spin_lock_t *lock);
void spin_lock_destroy(s_spin_lock_t **lock);
void spin_lock_initial(s_spin_lock_t *lock);
void spin_unlock(s_spin_lock_t *lock);

#endif

